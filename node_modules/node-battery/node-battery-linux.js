var fs = require("fs");

var pathArray = [];

module.exports.getBatteries = function(callback, start){

	// Already checked batteries?
	if(pathArray.length > 0) {
	
		// Yes
		callback(pathArray);
		return;
	}

	var i = start === undefined ? 1 : start;

	(function loopFunction(){

		var currentPath = "/sys/class/power_supply/BAT" + i;

		// Check if file exists.
		fs.exists(currentPath, function(exists){

			if(exists){
			
				fs.realpath(currentPath , function(error, realPath){

					if(error){

						console.error("Node-battery(getting real path): " + error);
						callback([]);
					}
					else{

						pathArray.push(realPath);

						i++;
						loopFunction();
					}

				});
			}
			else callback(pathArray);

		});
	})();
}

module.exports.percentages = function(callback, start){

	module.exports.getBatteries(function(pathArray){

		if(pathArray.length == 0) {
			
			callback([]);
			return;
		}

		var percentages = [];

		pathArray.forEach(function(value, index){
		
			fs.readFile(value + "/capacity", "utf8", function(error, data){

				if(error){

					console.error("Node-battery(reading file1): " + error);
				}
				else{

					percentages.push(Number(data));
					
					// Is this the last one?
					if(index + 1 == pathArray.length) callback(percentages);
				}

			});
		});


	}, start);
};

module.exports.isCharging = function(callback, start){

	module.exports.getBatteries(function(pathArray){

		if(pathArray.length == 0) {
			
			callback([]);
			return;
		}

		var charging = [];

		pathArray.forEach(function(value, index){

			fs.readFile(value + "/status", "utf8", function(error, data){
			
				if(error) {
					console.error("Node-battery(while reading " + value + "):" + error);
				}
				else{
				
					var state = data.toLowerCase().trim();
					
					if(state == "charging") charging.push(1);
					else if(state == "full") charging.push(1);
					else if(state == "discharging") charging.push(0);
					else if(state == "unknown") charging.push(0);
					else {
						console.warn("node-battery: state not recognized: " + state + ",");
						console.warn("falling back to not charging.");
						charging.push(0);
					}

					// Last one?
					if(index + 1 == pathArray.length) callback(charging);
				}

			});

		});
	
	}, start);

};
